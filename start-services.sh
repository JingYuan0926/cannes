#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Starting AI Data Analysis Pipeline${NC}"
echo "=================================="

# Check if .env file exists
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  .env file not found. Please create one from .env.example${NC}"
    echo "   cp .env.example .env"
    echo "   # Then edit .env with your OpenAI API key"
    exit 1
fi

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker is not running. Please start Docker Desktop.${NC}"
    exit 1
fi

# Pull latest images
echo -e "${BLUE}üì• Pulling latest images from Docker Hub...${NC}"
docker-compose pull

# Start services
echo -e "${BLUE}üèÉ Starting all services...${NC}"
docker-compose up -d

# Wait for services to be ready
echo -e "${BLUE}‚è≥ Waiting for services to be ready...${NC}"
sleep 10

# Check service health
echo -e "${BLUE}üè• Checking service health...${NC}"
echo "=================================="

services=("etl:3030" "preprocessing:3031" "eda:3035" "analysis:3040")

for service in "${services[@]}"; do
    name=$(echo $service | cut -d: -f1)
    port=$(echo $service | cut -d: -f2)
    
    if curl -s -f "http://localhost:$port/" > /dev/null 2>&1 || curl -s -f "http://localhost:$port/health" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ $name service (port $port) - HEALTHY${NC}"
    else
        echo -e "${RED}‚ùå $name service (port $port) - DOWN${NC}"
    fi
done

echo ""
echo -e "${GREEN}üéâ Pipeline started successfully!${NC}"
echo "=================================="
echo "üìä Services running on:"
echo "   ‚Ä¢ ETL Service:          http://localhost:3030"
echo "   ‚Ä¢ Preprocessing:        http://localhost:3031"
echo "   ‚Ä¢ EDA Service:          http://localhost:3035"
echo "   ‚Ä¢ Analysis Service:     http://localhost:3040"
echo ""
echo "üîß Management commands:"
echo "   ‚Ä¢ View logs:            docker-compose logs -f"
echo "   ‚Ä¢ Stop services:        docker-compose down"
echo "   ‚Ä¢ Restart services:     docker-compose restart"
echo "   ‚Ä¢ Check status:         docker-compose ps"
echo ""
echo -e "${BLUE}üåê Open your web application and start analyzing data!${NC}" 